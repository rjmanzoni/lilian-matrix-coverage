# This file is autogenerated. DO NOT EDIT.
# Generated by 'codecover create-bash-completion-file'
# $Id: CreateCompletionFileCommand.java 2528 2007-11-21 17:12:11Z kiesssn $

shopt -s extglob

_codecover_completion() {
	local cur cmds cmdOpts pOpts mOpts rOpts qOpts nOpts optsParam opt
	
	COMPREPLY=()
	cur=${COMP_WORDS[COMP_CWORD]}
	
	# Possible expansions, without pure-prefix abbreviations and without hidden commands
	cmds='alter-session as alter-test-case at analyze an copy-sessions cs help h info instrument in instrumenter-info ii merge-sessions ms merge-test-cases mt remove-sessions rs remove-test-cases rt report re touch-container'
	
	# help options have a strange command status...
	local helpOpts='-h --help'
	# all special options that have a command status
	local specOpts='-V --version'" $helpOpts"
	
	local cmd= isPropCmd= isPsCmd= isHelpCmd= nExpectArgs= isCur= i=0
	local prev= help= prop= val= isRevProp= last='none' nargs=0 stat=
	local options= hasRevPropOpt= hasRevisionOpt= hasRelocateOpt=
	
	for opt in "${COMP_WORDS[@]}"
	do
		# get status of current word (from previous iteration)
		[[ $isCur ]] && stat=$last
		
		# are we processing the current word
		isCur=
		[[ $i -eq $COMP_CWORD ]] && isCur=1
		let i++
		
		# FIRST must be the executable
		[ $last = 'none' ] && { last='first'; continue ; }
		
		# SKIP option arguments
		if [ "$prev" = '--container' -o "$prev" = '--destination-container' -o "$prev" = '--destination' -o "$prev" = '-I' -o "$prev" = '-t' -o "$prev" = '-c' -o "$prev" = '--name' -o "$prev" = '--comment' -o "$prev" = '-D' -o "$prev" = '-e' -o "$prev" = '-s' -o "$prev" = '-i' -o "$prev" = '--instrumenter' -o "$prev" = '--language' -o "$prev" = '--includes-file' -o "$prev" = '--test-case' -o "$prev" = '--session' -o "$prev" = '-o' -o "$prev" = '--charset' -o "$prev" = '-l' -o "$prev" = '-x' -o "$prev" = '--root-directory' -o "$prev" = '--include' -o "$prev" = '--exclude' -o "$prev" = '--excludes-file' -o "$prev" = '-a' -o "$prev" = '-m' -o "$prev" = '--directive' -o "$prev" = '-g' -o "$prev" = '--coverage-log' -o "$prev" = '--criterion' -o "$prev" = '-d' -o "$prev" = '-n' -o "$prev" = '--add-plugin-dir' -o "$prev" = '--template' -o "$prev" = '-f' -o "$prev" = '-r' ]; then
			prev=''
			last='skip'
			continue;
		fi
		
		# Argh...  This looks like a bashbug...
		# Redirections are passed to the completion function
		# although it is managed by the shell directly...
		# It matters because we want to tell the user when no more
		# completion is available, so it does not necessary
		# fallback to the default case.
		if [[ $prev == @(<|>|>>|[12]>|[12]>>) ]] ; then
			prev=''
			last='skip'
			continue ;
		fi
		prev=$opt
		
		# get the subCoMmanD
		if [[ ! $cmd && $opt \
			&& ( $opt != -* || $opt == @(${specOpts// /|}) ) ]]
		then
			cmd=$opt
			[[ $cmd == @($propCmds) ]] && isPropCmd=1
			[[ $cmd == @($psCmds) ]] && isPsCmd=1
			[[ $cmd == @(${helpOpts// /|}) ]] && cmd='help'
			[[ $cmd = 'help' ]] && isHelpCmd=1
			# HELP about a command asked with an option
			if [[ $isHelpCmd && $cmd && $cmd != 'help' && ! $help ]]
			then
				help=$cmd
				cmd='help'
			fi
			last='cmd'
			continue
		fi
		
		# HELP about a command
		if [[ $isHelpCmd && ! $help && $opt && $opt != -* ]]
		then
			help=$opt
			last='help'
			continue
		fi
		
		if [[ $last != 'onlyarg' ]]
		then
			# more OPTions
			if [ "$opt" = '-h' -o "$opt" = '--help' ]; then
				isHelpCmd=1
			fi
			
			# no more options, only arguments, whatever they look like.
			if [[ $opt = '--' && ! $isCur ]] ; then
				last='onlyarg'
				continue
			fi
			
			# options are recorded...
			if [[ $opt == -* ]] ; then
				# but not the current one!
				[[ ! $isCur ]] && options="$options $opt "
				last='opt'
				continue
			fi
		else
			# onlyarg
			let nargs++
			continue
		fi
			
		# then we have an argument
		last='arg'
		let nargs++
	done
	[[ $stat ]] || stat=$last
			
	# suggest all subcommands, including special help
	if [[ ! $cmd || $stat = 'cmd' ]]
	then
	COMPREPLY=( $( compgen -W "$cmds $specOpts" -- $cur ) )
	return 0
	fi
			
	# suggest all subcommands
	if [[ $stat = 'help' || ( $isHelpCmd && ! $help ) ]]
	then
		COMPREPLY=( $( compgen -W "$cmds" -- $cur ) )
		return 0
	fi
			
	# help about option arguments
	if [[ $stat = 'skip' ]]
	then
		local previous=${COMP_WORDS[COMP_CWORD-1]}
		local values= dirs= beep=
		
		if [ "$cmd" = 'alter-session' -o "$cmd" = 'as' ]; then
			if [ "$previous" = '-s' -o "$previous" = '--session' ]; then
				beep=1
			fi
			if [ "$previous" = '--add-plugin-dir' ]; then
				dirs=1
			fi
			if [ "$previous" = '-c' -o "$previous" = '--container' ]; then
				:
			fi
			if [ "$previous" = '-m' -o "$previous" = '--comment' ]; then
				beep=1
			fi
			if [ "$previous" = '-n' -o "$previous" = '--name' ]; then
				beep=1
			fi
		fi
		if [ "$cmd" = 'alter-test-case' -o "$cmd" = 'at' ]; then
			if [ "$previous" = '-s' -o "$previous" = '--session' ]; then
				beep=1
			fi
			if [ "$previous" = '--add-plugin-dir' ]; then
				dirs=1
			fi
			if [ "$previous" = '-t' -o "$previous" = '--test-case' ]; then
				beep=1
			fi
			if [ "$previous" = '-c' -o "$previous" = '--container' ]; then
				:
			fi
			if [ "$previous" = '-m' -o "$previous" = '--comment' ]; then
				beep=1
			fi
			if [ "$previous" = '-n' -o "$previous" = '--name' ]; then
				beep=1
			fi
		fi
		if [ "$cmd" = 'analyze' -o "$cmd" = 'an' ]; then
			if [ "$previous" = '--add-plugin-dir' ]; then
				dirs=1
			fi
			if [ "$previous" = '-a' -o "$previous" = '--charset' ]; then
				values='utf-8 latin1'
			fi
			if [ "$previous" = '-c' -o "$previous" = '--container' ]; then
				:
			fi
			if [ "$previous" = '-g' -o "$previous" = '--coverage-log' ]; then
				:
			fi
			if [ "$previous" = '-m' -o "$previous" = '--comment' ]; then
				beep=1
			fi
			if [ "$previous" = '-n' -o "$previous" = '--name' ]; then
				beep=1
			fi
		fi
		if [ "$cmd" = 'copy-sessions' -o "$cmd" = 'cs' ]; then
			if [ "$previous" = '-s' -o "$previous" = '--session' ]; then
				beep=1
			fi
			if [ "$previous" = '--add-plugin-dir' ]; then
				dirs=1
			fi
			if [ "$previous" = '-c' -o "$previous" = '--container' ]; then
				:
			fi
			if [ "$previous" = '-d' -o "$previous" = '--destination-container' ]; then
				:
			fi
		fi
		if [ "$cmd" = 'info' ]; then
			if [ "$previous" = '-s' -o "$previous" = '--session' ]; then
				beep=1
			fi
			if [ "$previous" = '--add-plugin-dir' ]; then
				dirs=1
			fi
			if [ "$previous" = '-c' -o "$previous" = '--container' ]; then
				:
			fi
		fi
		if [ "$cmd" = 'instrument' -o "$cmd" = 'in' ]; then
			if [ "$previous" = '-a' -o "$previous" = '--charset' ]; then
				values='utf-8 latin1'
			fi
			if [ "$previous" = '-r' -o "$previous" = '--root-directory' ]; then
				dirs=1
			fi
			if [ "$previous" = '-c' -o "$previous" = '--container' ]; then
				:
			fi
			if [ "$previous" = '-f' -o "$previous" = '--includes-file' ]; then
				:
			fi
			if [ "$previous" = '-I' -o "$previous" = '--instrumenter' ]; then
				beep=1
			fi
			if [ "$previous" = '-x' -o "$previous" = '--excludes-file' ]; then
				:
			fi
			if [ "$previous" = '-e' -o "$previous" = '--exclude' ]; then
				beep=1
			fi
			if [ "$previous" = '--add-plugin-dir' ]; then
				dirs=1
			fi
			if [ "$previous" = '-o' -o "$previous" = '--criterion' ]; then
				values='all st br co lo'
			fi
			if [ "$previous" = '-d' -o "$previous" = '--destination' ]; then
				:
			fi
			if [ "$previous" = '-i' -o "$previous" = '--include' ]; then
				beep=1
			fi
			if [ "$previous" = '-D' -o "$previous" = '--directive' ]; then
				beep=1
			fi
			if [ "$previous" = '-l' -o "$previous" = '--language' ]; then
				values='java cobol'
			fi
		fi
		if [ "$cmd" = 'instrumenter-info' -o "$cmd" = 'ii' ]; then
			if [ "$previous" = '--add-plugin-dir' ]; then
				dirs=1
			fi
			if [ "$previous" = '-l' -o "$previous" = '--language' ]; then
				values='java cobol'
			fi
		fi
		if [ "$cmd" = 'merge-sessions' -o "$cmd" = 'ms' ]; then
			if [ "$previous" = '--add-plugin-dir' ]; then
				dirs=1
			fi
			if [ "$previous" = '-s' -o "$previous" = '--session' ]; then
				beep=1
			fi
			if [ "$previous" = '-c' -o "$previous" = '--container' ]; then
				:
			fi
			if [ "$previous" = '-m' -o "$previous" = '--comment' ]; then
				beep=1
			fi
			if [ "$previous" = '-n' -o "$previous" = '--name' ]; then
				beep=1
			fi
		fi
		if [ "$cmd" = 'merge-test-cases' -o "$cmd" = 'mt' ]; then
			if [ "$previous" = '-s' -o "$previous" = '--session' ]; then
				beep=1
			fi
			if [ "$previous" = '--add-plugin-dir' ]; then
				dirs=1
			fi
			if [ "$previous" = '-c' -o "$previous" = '--container' ]; then
				:
			fi
			if [ "$previous" = '-t' -o "$previous" = '--test-case' ]; then
				beep=1
			fi
			if [ "$previous" = '-m' -o "$previous" = '--comment' ]; then
				beep=1
			fi
			if [ "$previous" = '-n' -o "$previous" = '--name' ]; then
				beep=1
			fi
		fi
		if [ "$cmd" = 'remove-sessions' -o "$cmd" = 'rs' ]; then
			if [ "$previous" = '-s' -o "$previous" = '--session' ]; then
				beep=1
			fi
			if [ "$previous" = '--add-plugin-dir' ]; then
				dirs=1
			fi
			if [ "$previous" = '-c' -o "$previous" = '--container' ]; then
				:
			fi
		fi
		if [ "$cmd" = 'remove-test-cases' -o "$cmd" = 'rt' ]; then
			if [ "$previous" = '-s' -o "$previous" = '--session' ]; then
				beep=1
			fi
			if [ "$previous" = '--add-plugin-dir' ]; then
				dirs=1
			fi
			if [ "$previous" = '-c' -o "$previous" = '--container' ]; then
				:
			fi
			if [ "$previous" = '-t' -o "$previous" = '--test-case' ]; then
				beep=1
			fi
		fi
		if [ "$cmd" = 'report' -o "$cmd" = 're' ]; then
			if [ "$previous" = '-s' -o "$previous" = '--session' ]; then
				beep=1
			fi
			if [ "$previous" = '--add-plugin-dir' ]; then
				dirs=1
			fi
			if [ "$previous" = '-t' -o "$previous" = '--template' ]; then
				:
			fi
			if [ "$previous" = '-c' -o "$previous" = '--container' ]; then
				:
			fi
			if [ "$previous" = '-d' -o "$previous" = '--destination' ]; then
				:
			fi
		fi
		if [ "$cmd" = 'touch-container' ]; then
			if [ "$previous" = '--add-plugin-dir' ]; then
				dirs=1
			fi
		fi
		
		# if the previous option required a parameter, do something
		# or fallback on ordinary filename expansion
		[[ $values ]] && COMPREPLY=( $( compgen -W "$values" -- $cur ) )
		[[ $dirs ]] && COMPREPLY=( $( compgen -o dirnames -- $cur ) )
		[[ $beep ]] &&
		{
			# 'no known completion'. hummm.
			echo -en "\a"
			COMPREPLY=( '' )
		}
		return 0
	fi

	# maximum number of additional arguments expected in various forms
	case $cmd in
		*)
			nExpectArgs=0
			;;
		help|h)
			nExpectArgs=0
			;;
		--version)
			nExpectArgs=0
			;;
	esac

	# if not typing an option,
	# then fallback on ordinary filename expansion
	#if [[ $cur != -* || $stat = 'onlyarg' ]]  ; then
	if [[ $stat = 'onlyarg' ]]  ; then
		return 0
	fi
	
	cmdOpts=
	
	if [ "$cmd" = 'alter-session' -o "$cmd" = 'as' ]; then
		cmdOpts=' ''-s --session -c --container -v --verbose -q --quiet -m --comment --no-default-plugin-dir --show-stack-trace --no-progress-bar --add-plugin-dir -p --pretend --progress-bar -h --help -n --name'' '
		
		# take out options already given
		for opt in $options
		do
			
			if [ "$opt" = '-s' -o "$opt" = '--session' ]; then
				cmdOpts=${cmdOpts/ '-s' / }
				cmdOpts=${cmdOpts/ '--session' / }
			fi
			
			if [ "$opt" = '-c' -o "$opt" = '--container' ]; then
				cmdOpts=${cmdOpts/ '-c' / }
				cmdOpts=${cmdOpts/ '--container' / }
			fi
			
			if [ "$opt" = '-v' -o "$opt" = '--verbose' ]; then
				cmdOpts=${cmdOpts/ '-v' / }
				cmdOpts=${cmdOpts/ '--verbose' / }
				cmdOpts=${cmdOpts/ '-q' / }
				cmdOpts=${cmdOpts/ '--quiet' / }
			fi
			
			if [ "$opt" = '-q' -o "$opt" = '--quiet' ]; then
				cmdOpts=${cmdOpts/ '-v' / }
				cmdOpts=${cmdOpts/ '--verbose' / }
				cmdOpts=${cmdOpts/ '-q' / }
				cmdOpts=${cmdOpts/ '--quiet' / }
			fi
			
			if [ "$opt" = '-m' -o "$opt" = '--comment' ]; then
				cmdOpts=${cmdOpts/ '-m' / }
				cmdOpts=${cmdOpts/ '--comment' / }
			fi
			
			if [ "$opt" = '--no-default-plugin-dir' ]; then
				cmdOpts=${cmdOpts/ '--no-default-plugin-dir' / }
			fi
			
			if [ "$opt" = '--show-stack-trace' ]; then
				cmdOpts=${cmdOpts/ '--show-stack-trace' / }
			fi
			
			if [ "$opt" = '--no-progress-bar' ]; then
				cmdOpts=${cmdOpts/ '--no-progress-bar' / }
				cmdOpts=${cmdOpts/ '--progress-bar' / }
			fi
			
			
			if [ "$opt" = '-p' -o "$opt" = '--pretend' ]; then
				cmdOpts=${cmdOpts/ '-p' / }
				cmdOpts=${cmdOpts/ '--pretend' / }
			fi
			
			if [ "$opt" = '--progress-bar' ]; then
				cmdOpts=${cmdOpts/ '--no-progress-bar' / }
				cmdOpts=${cmdOpts/ '--progress-bar' / }
			fi
			
			if [ "$opt" = '-h' -o "$opt" = '--help' ]; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
			
			if [ "$opt" = '-n' -o "$opt" = '--name' ]; then
				cmdOpts=${cmdOpts/ '-n' / }
				cmdOpts=${cmdOpts/ '--name' / }
			fi
			
			
			# remove help options within help subcommand
			if [ $isHelpCmd ] ; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
		done
	fi
	
	if [ "$cmd" = 'alter-test-case' -o "$cmd" = 'at' ]; then
		cmdOpts=' ''-s --session -c --container -t --test-case -v --verbose -q --quiet -m --comment --no-default-plugin-dir --show-stack-trace --no-progress-bar --add-plugin-dir -p --pretend --progress-bar -h --help -n --name'' '
		
		# take out options already given
		for opt in $options
		do
			
			if [ "$opt" = '-s' -o "$opt" = '--session' ]; then
				cmdOpts=${cmdOpts/ '-s' / }
				cmdOpts=${cmdOpts/ '--session' / }
			fi
			
			if [ "$opt" = '-c' -o "$opt" = '--container' ]; then
				cmdOpts=${cmdOpts/ '-c' / }
				cmdOpts=${cmdOpts/ '--container' / }
			fi
			
			if [ "$opt" = '-t' -o "$opt" = '--test-case' ]; then
				cmdOpts=${cmdOpts/ '-t' / }
				cmdOpts=${cmdOpts/ '--test-case' / }
			fi
			
			if [ "$opt" = '-v' -o "$opt" = '--verbose' ]; then
				cmdOpts=${cmdOpts/ '-v' / }
				cmdOpts=${cmdOpts/ '--verbose' / }
				cmdOpts=${cmdOpts/ '-q' / }
				cmdOpts=${cmdOpts/ '--quiet' / }
			fi
			
			if [ "$opt" = '-q' -o "$opt" = '--quiet' ]; then
				cmdOpts=${cmdOpts/ '-v' / }
				cmdOpts=${cmdOpts/ '--verbose' / }
				cmdOpts=${cmdOpts/ '-q' / }
				cmdOpts=${cmdOpts/ '--quiet' / }
			fi
			
			if [ "$opt" = '-m' -o "$opt" = '--comment' ]; then
				cmdOpts=${cmdOpts/ '-m' / }
				cmdOpts=${cmdOpts/ '--comment' / }
			fi
			
			if [ "$opt" = '--no-default-plugin-dir' ]; then
				cmdOpts=${cmdOpts/ '--no-default-plugin-dir' / }
			fi
			
			if [ "$opt" = '--show-stack-trace' ]; then
				cmdOpts=${cmdOpts/ '--show-stack-trace' / }
			fi
			
			if [ "$opt" = '--no-progress-bar' ]; then
				cmdOpts=${cmdOpts/ '--no-progress-bar' / }
				cmdOpts=${cmdOpts/ '--progress-bar' / }
			fi
			
			
			if [ "$opt" = '-p' -o "$opt" = '--pretend' ]; then
				cmdOpts=${cmdOpts/ '-p' / }
				cmdOpts=${cmdOpts/ '--pretend' / }
			fi
			
			if [ "$opt" = '--progress-bar' ]; then
				cmdOpts=${cmdOpts/ '--no-progress-bar' / }
				cmdOpts=${cmdOpts/ '--progress-bar' / }
			fi
			
			if [ "$opt" = '-h' -o "$opt" = '--help' ]; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
			
			if [ "$opt" = '-n' -o "$opt" = '--name' ]; then
				cmdOpts=${cmdOpts/ '-n' / }
				cmdOpts=${cmdOpts/ '--name' / }
			fi
			
			
			# remove help options within help subcommand
			if [ $isHelpCmd ] ; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
		done
	fi
	
	if [ "$cmd" = 'analyze' -o "$cmd" = 'an' ]; then
		cmdOpts=' ''-a --charset -g --coverage-log -c --container -v --verbose -q --quiet -m --comment --no-default-plugin-dir --show-stack-trace --no-progress-bar --add-plugin-dir -p --pretend --progress-bar -h --help -n --name'' '
		
		# take out options already given
		for opt in $options
		do
			
			if [ "$opt" = '-a' -o "$opt" = '--charset' ]; then
				cmdOpts=${cmdOpts/ '-a' / }
				cmdOpts=${cmdOpts/ '--charset' / }
			fi
			
			if [ "$opt" = '-g' -o "$opt" = '--coverage-log' ]; then
				cmdOpts=${cmdOpts/ '-g' / }
				cmdOpts=${cmdOpts/ '--coverage-log' / }
			fi
			
			if [ "$opt" = '-c' -o "$opt" = '--container' ]; then
				cmdOpts=${cmdOpts/ '-c' / }
				cmdOpts=${cmdOpts/ '--container' / }
			fi
			
			if [ "$opt" = '-v' -o "$opt" = '--verbose' ]; then
				cmdOpts=${cmdOpts/ '-v' / }
				cmdOpts=${cmdOpts/ '--verbose' / }
				cmdOpts=${cmdOpts/ '-q' / }
				cmdOpts=${cmdOpts/ '--quiet' / }
			fi
			
			if [ "$opt" = '-q' -o "$opt" = '--quiet' ]; then
				cmdOpts=${cmdOpts/ '-v' / }
				cmdOpts=${cmdOpts/ '--verbose' / }
				cmdOpts=${cmdOpts/ '-q' / }
				cmdOpts=${cmdOpts/ '--quiet' / }
			fi
			
			if [ "$opt" = '-m' -o "$opt" = '--comment' ]; then
				cmdOpts=${cmdOpts/ '-m' / }
				cmdOpts=${cmdOpts/ '--comment' / }
			fi
			
			if [ "$opt" = '--no-default-plugin-dir' ]; then
				cmdOpts=${cmdOpts/ '--no-default-plugin-dir' / }
			fi
			
			if [ "$opt" = '--show-stack-trace' ]; then
				cmdOpts=${cmdOpts/ '--show-stack-trace' / }
			fi
			
			if [ "$opt" = '--no-progress-bar' ]; then
				cmdOpts=${cmdOpts/ '--no-progress-bar' / }
				cmdOpts=${cmdOpts/ '--progress-bar' / }
			fi
			
			
			if [ "$opt" = '-p' -o "$opt" = '--pretend' ]; then
				cmdOpts=${cmdOpts/ '-p' / }
				cmdOpts=${cmdOpts/ '--pretend' / }
			fi
			
			if [ "$opt" = '--progress-bar' ]; then
				cmdOpts=${cmdOpts/ '--no-progress-bar' / }
				cmdOpts=${cmdOpts/ '--progress-bar' / }
			fi
			
			if [ "$opt" = '-h' -o "$opt" = '--help' ]; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
			
			if [ "$opt" = '-n' -o "$opt" = '--name' ]; then
				cmdOpts=${cmdOpts/ '-n' / }
				cmdOpts=${cmdOpts/ '--name' / }
			fi
			
			
			# remove help options within help subcommand
			if [ $isHelpCmd ] ; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
		done
	fi
	
	if [ "$cmd" = 'copy-sessions' -o "$cmd" = 'cs' ]; then
		cmdOpts=' ''--show-stack-trace --add-plugin-dir --no-progress-bar -s --session -c --container -v --verbose --progress-bar -p --pretend -q --quiet -d --destination-container --no-default-plugin-dir -h --help'' '
		
		# take out options already given
		for opt in $options
		do
			
			if [ "$opt" = '--show-stack-trace' ]; then
				cmdOpts=${cmdOpts/ '--show-stack-trace' / }
			fi
			
			
			if [ "$opt" = '--no-progress-bar' ]; then
				cmdOpts=${cmdOpts/ '--no-progress-bar' / }
				cmdOpts=${cmdOpts/ '--progress-bar' / }
			fi
			
			
			if [ "$opt" = '-c' -o "$opt" = '--container' ]; then
				cmdOpts=${cmdOpts/ '-c' / }
				cmdOpts=${cmdOpts/ '--container' / }
			fi
			
			if [ "$opt" = '-v' -o "$opt" = '--verbose' ]; then
				cmdOpts=${cmdOpts/ '-v' / }
				cmdOpts=${cmdOpts/ '--verbose' / }
				cmdOpts=${cmdOpts/ '-q' / }
				cmdOpts=${cmdOpts/ '--quiet' / }
			fi
			
			if [ "$opt" = '--progress-bar' ]; then
				cmdOpts=${cmdOpts/ '--no-progress-bar' / }
				cmdOpts=${cmdOpts/ '--progress-bar' / }
			fi
			
			if [ "$opt" = '-p' -o "$opt" = '--pretend' ]; then
				cmdOpts=${cmdOpts/ '-p' / }
				cmdOpts=${cmdOpts/ '--pretend' / }
			fi
			
			if [ "$opt" = '-q' -o "$opt" = '--quiet' ]; then
				cmdOpts=${cmdOpts/ '-v' / }
				cmdOpts=${cmdOpts/ '--verbose' / }
				cmdOpts=${cmdOpts/ '-q' / }
				cmdOpts=${cmdOpts/ '--quiet' / }
			fi
			
			if [ "$opt" = '-d' -o "$opt" = '--destination-container' ]; then
				cmdOpts=${cmdOpts/ '-d' / }
				cmdOpts=${cmdOpts/ '--destination-container' / }
			fi
			
			if [ "$opt" = '--no-default-plugin-dir' ]; then
				cmdOpts=${cmdOpts/ '--no-default-plugin-dir' / }
			fi
			
			if [ "$opt" = '-h' -o "$opt" = '--help' ]; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
			
			
			# remove help options within help subcommand
			if [ $isHelpCmd ] ; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
		done
	fi
	
	if [ "$cmd" = 'create-bash-completion-file' ]; then
		cmdOpts=' ''-h --help'' '
		
		# take out options already given
		for opt in $options
		do
			
			if [ "$opt" = '-h' -o "$opt" = '--help' ]; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
			
			
			# remove help options within help subcommand
			if [ $isHelpCmd ] ; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
		done
	fi
	
	if [ "$cmd" = 'help' -o "$cmd" = 'h' ]; then
		cmdOpts=' ''-h --help'' '
		
		# take out options already given
		for opt in $options
		do
			
			if [ "$opt" = '-h' -o "$opt" = '--help' ]; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
			
			
			# remove help options within help subcommand
			if [ $isHelpCmd ] ; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
		done
	fi
	
	if [ "$cmd" = 'info' ]; then
		cmdOpts=' ''--show-stack-trace -s --session --add-plugin-dir --no-progress-bar -T --test-cases -c --container -v --verbose --progress-bar -p --pretend -q --quiet --no-default-plugin-dir -h --help'' '
		
		# take out options already given
		for opt in $options
		do
			
			if [ "$opt" = '--show-stack-trace' ]; then
				cmdOpts=${cmdOpts/ '--show-stack-trace' / }
			fi
			
			if [ "$opt" = '-s' -o "$opt" = '--session' ]; then
				cmdOpts=${cmdOpts/ '-s' / }
				cmdOpts=${cmdOpts/ '--session' / }
			fi
			
			
			if [ "$opt" = '--no-progress-bar' ]; then
				cmdOpts=${cmdOpts/ '--no-progress-bar' / }
				cmdOpts=${cmdOpts/ '--progress-bar' / }
			fi
			
			if [ "$opt" = '-T' -o "$opt" = '--test-cases' ]; then
				cmdOpts=${cmdOpts/ '-T' / }
				cmdOpts=${cmdOpts/ '--test-cases' / }
			fi
			
			if [ "$opt" = '-c' -o "$opt" = '--container' ]; then
				cmdOpts=${cmdOpts/ '-c' / }
				cmdOpts=${cmdOpts/ '--container' / }
			fi
			
			if [ "$opt" = '-v' -o "$opt" = '--verbose' ]; then
				cmdOpts=${cmdOpts/ '-v' / }
				cmdOpts=${cmdOpts/ '--verbose' / }
				cmdOpts=${cmdOpts/ '-q' / }
				cmdOpts=${cmdOpts/ '--quiet' / }
			fi
			
			if [ "$opt" = '--progress-bar' ]; then
				cmdOpts=${cmdOpts/ '--no-progress-bar' / }
				cmdOpts=${cmdOpts/ '--progress-bar' / }
			fi
			
			if [ "$opt" = '-p' -o "$opt" = '--pretend' ]; then
				cmdOpts=${cmdOpts/ '-p' / }
				cmdOpts=${cmdOpts/ '--pretend' / }
			fi
			
			if [ "$opt" = '-q' -o "$opt" = '--quiet' ]; then
				cmdOpts=${cmdOpts/ '-v' / }
				cmdOpts=${cmdOpts/ '--verbose' / }
				cmdOpts=${cmdOpts/ '-q' / }
				cmdOpts=${cmdOpts/ '--quiet' / }
			fi
			
			if [ "$opt" = '--no-default-plugin-dir' ]; then
				cmdOpts=${cmdOpts/ '--no-default-plugin-dir' / }
			fi
			
			if [ "$opt" = '-h' -o "$opt" = '--help' ]; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
			
			
			# remove help options within help subcommand
			if [ $isHelpCmd ] ; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
		done
	fi
	
	if [ "$cmd" = 'instrument' -o "$cmd" = 'in' ]; then
		cmdOpts=' ''-a --charset -r --root-directory -c --container -v --verbose -q --quiet -f --includes-file --no-default-plugin-dir -I --instrumenter -x --excludes-file -u --copy-uninstrumented --show-stack-trace -e --exclude --add-plugin-dir --no-progress-bar -o --criterion -d --destination -p --pretend --progress-bar -i --include -D --directive -h --help -l --language'' '
		
		# take out options already given
		for opt in $options
		do
			
			if [ "$opt" = '-a' -o "$opt" = '--charset' ]; then
				cmdOpts=${cmdOpts/ '-a' / }
				cmdOpts=${cmdOpts/ '--charset' / }
			fi
			
			if [ "$opt" = '-r' -o "$opt" = '--root-directory' ]; then
				cmdOpts=${cmdOpts/ '-r' / }
				cmdOpts=${cmdOpts/ '--root-directory' / }
			fi
			
			if [ "$opt" = '-c' -o "$opt" = '--container' ]; then
				cmdOpts=${cmdOpts/ '-c' / }
				cmdOpts=${cmdOpts/ '--container' / }
			fi
			
			if [ "$opt" = '-v' -o "$opt" = '--verbose' ]; then
				cmdOpts=${cmdOpts/ '-v' / }
				cmdOpts=${cmdOpts/ '--verbose' / }
				cmdOpts=${cmdOpts/ '-q' / }
				cmdOpts=${cmdOpts/ '--quiet' / }
			fi
			
			if [ "$opt" = '-q' -o "$opt" = '--quiet' ]; then
				cmdOpts=${cmdOpts/ '-v' / }
				cmdOpts=${cmdOpts/ '--verbose' / }
				cmdOpts=${cmdOpts/ '-q' / }
				cmdOpts=${cmdOpts/ '--quiet' / }
			fi
			
			if [ "$opt" = '-f' -o "$opt" = '--includes-file' ]; then
				cmdOpts=${cmdOpts/ '-f' / }
				cmdOpts=${cmdOpts/ '--includes-file' / }
			fi
			
			if [ "$opt" = '--no-default-plugin-dir' ]; then
				cmdOpts=${cmdOpts/ '--no-default-plugin-dir' / }
			fi
			
			if [ "$opt" = '-I' -o "$opt" = '--instrumenter' ]; then
				cmdOpts=${cmdOpts/ '-I' / }
				cmdOpts=${cmdOpts/ '--instrumenter' / }
			fi
			
			if [ "$opt" = '-x' -o "$opt" = '--excludes-file' ]; then
				cmdOpts=${cmdOpts/ '-x' / }
				cmdOpts=${cmdOpts/ '--excludes-file' / }
			fi
			
			if [ "$opt" = '-u' -o "$opt" = '--copy-uninstrumented' ]; then
				cmdOpts=${cmdOpts/ '-u' / }
				cmdOpts=${cmdOpts/ '--copy-uninstrumented' / }
			fi
			
			if [ "$opt" = '--show-stack-trace' ]; then
				cmdOpts=${cmdOpts/ '--show-stack-trace' / }
			fi
			
			
			
			if [ "$opt" = '--no-progress-bar' ]; then
				cmdOpts=${cmdOpts/ '--no-progress-bar' / }
				cmdOpts=${cmdOpts/ '--progress-bar' / }
			fi
			
			
			if [ "$opt" = '-d' -o "$opt" = '--destination' ]; then
				cmdOpts=${cmdOpts/ '-d' / }
				cmdOpts=${cmdOpts/ '--destination' / }
			fi
			
			if [ "$opt" = '-p' -o "$opt" = '--pretend' ]; then
				cmdOpts=${cmdOpts/ '-p' / }
				cmdOpts=${cmdOpts/ '--pretend' / }
			fi
			
			if [ "$opt" = '--progress-bar' ]; then
				cmdOpts=${cmdOpts/ '--no-progress-bar' / }
				cmdOpts=${cmdOpts/ '--progress-bar' / }
			fi
			
			
			
			if [ "$opt" = '-h' -o "$opt" = '--help' ]; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
			
			if [ "$opt" = '-l' -o "$opt" = '--language' ]; then
				cmdOpts=${cmdOpts/ '-l' / }
				cmdOpts=${cmdOpts/ '--language' / }
			fi
			
			
			# remove help options within help subcommand
			if [ $isHelpCmd ] ; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
		done
	fi
	
	if [ "$cmd" = 'instrumenter-info' -o "$cmd" = 'ii' ]; then
		cmdOpts=' ''--show-stack-trace --add-plugin-dir --no-progress-bar -v --verbose --progress-bar -p --pretend -q --quiet --no-default-plugin-dir -h --help -l --language'' '
		
		# take out options already given
		for opt in $options
		do
			
			if [ "$opt" = '--show-stack-trace' ]; then
				cmdOpts=${cmdOpts/ '--show-stack-trace' / }
			fi
			
			
			if [ "$opt" = '--no-progress-bar' ]; then
				cmdOpts=${cmdOpts/ '--no-progress-bar' / }
				cmdOpts=${cmdOpts/ '--progress-bar' / }
			fi
			
			if [ "$opt" = '-v' -o "$opt" = '--verbose' ]; then
				cmdOpts=${cmdOpts/ '-v' / }
				cmdOpts=${cmdOpts/ '--verbose' / }
				cmdOpts=${cmdOpts/ '-q' / }
				cmdOpts=${cmdOpts/ '--quiet' / }
			fi
			
			if [ "$opt" = '--progress-bar' ]; then
				cmdOpts=${cmdOpts/ '--no-progress-bar' / }
				cmdOpts=${cmdOpts/ '--progress-bar' / }
			fi
			
			if [ "$opt" = '-p' -o "$opt" = '--pretend' ]; then
				cmdOpts=${cmdOpts/ '-p' / }
				cmdOpts=${cmdOpts/ '--pretend' / }
			fi
			
			if [ "$opt" = '-q' -o "$opt" = '--quiet' ]; then
				cmdOpts=${cmdOpts/ '-v' / }
				cmdOpts=${cmdOpts/ '--verbose' / }
				cmdOpts=${cmdOpts/ '-q' / }
				cmdOpts=${cmdOpts/ '--quiet' / }
			fi
			
			if [ "$opt" = '--no-default-plugin-dir' ]; then
				cmdOpts=${cmdOpts/ '--no-default-plugin-dir' / }
			fi
			
			if [ "$opt" = '-h' -o "$opt" = '--help' ]; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
			
			if [ "$opt" = '-l' -o "$opt" = '--language' ]; then
				cmdOpts=${cmdOpts/ '-l' / }
				cmdOpts=${cmdOpts/ '--language' / }
			fi
			
			
			# remove help options within help subcommand
			if [ $isHelpCmd ] ; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
		done
	fi
	
	if [ "$cmd" = 'merge-sessions' -o "$cmd" = 'ms' ]; then
		cmdOpts=' ''-s --session -c --container -v --verbose -q --quiet -m --comment --no-default-plugin-dir --show-stack-trace --no-progress-bar --add-plugin-dir -p --pretend --progress-bar -R --remove-old-test-sessions -h --help -n --name'' '
		
		# take out options already given
		for opt in $options
		do
			
			
			if [ "$opt" = '-c' -o "$opt" = '--container' ]; then
				cmdOpts=${cmdOpts/ '-c' / }
				cmdOpts=${cmdOpts/ '--container' / }
			fi
			
			if [ "$opt" = '-v' -o "$opt" = '--verbose' ]; then
				cmdOpts=${cmdOpts/ '-v' / }
				cmdOpts=${cmdOpts/ '--verbose' / }
				cmdOpts=${cmdOpts/ '-q' / }
				cmdOpts=${cmdOpts/ '--quiet' / }
			fi
			
			if [ "$opt" = '-q' -o "$opt" = '--quiet' ]; then
				cmdOpts=${cmdOpts/ '-v' / }
				cmdOpts=${cmdOpts/ '--verbose' / }
				cmdOpts=${cmdOpts/ '-q' / }
				cmdOpts=${cmdOpts/ '--quiet' / }
			fi
			
			if [ "$opt" = '-m' -o "$opt" = '--comment' ]; then
				cmdOpts=${cmdOpts/ '-m' / }
				cmdOpts=${cmdOpts/ '--comment' / }
			fi
			
			if [ "$opt" = '--no-default-plugin-dir' ]; then
				cmdOpts=${cmdOpts/ '--no-default-plugin-dir' / }
			fi
			
			if [ "$opt" = '--show-stack-trace' ]; then
				cmdOpts=${cmdOpts/ '--show-stack-trace' / }
			fi
			
			if [ "$opt" = '--no-progress-bar' ]; then
				cmdOpts=${cmdOpts/ '--no-progress-bar' / }
				cmdOpts=${cmdOpts/ '--progress-bar' / }
			fi
			
			
			if [ "$opt" = '-p' -o "$opt" = '--pretend' ]; then
				cmdOpts=${cmdOpts/ '-p' / }
				cmdOpts=${cmdOpts/ '--pretend' / }
			fi
			
			if [ "$opt" = '--progress-bar' ]; then
				cmdOpts=${cmdOpts/ '--no-progress-bar' / }
				cmdOpts=${cmdOpts/ '--progress-bar' / }
			fi
			
			if [ "$opt" = '-R' -o "$opt" = '--remove-old-test-sessions' ]; then
				cmdOpts=${cmdOpts/ '-R' / }
				cmdOpts=${cmdOpts/ '--remove-old-test-sessions' / }
			fi
			
			if [ "$opt" = '-h' -o "$opt" = '--help' ]; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
			
			if [ "$opt" = '-n' -o "$opt" = '--name' ]; then
				cmdOpts=${cmdOpts/ '-n' / }
				cmdOpts=${cmdOpts/ '--name' / }
			fi
			
			
			# remove help options within help subcommand
			if [ $isHelpCmd ] ; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
		done
	fi
	
	if [ "$cmd" = 'merge-test-cases' -o "$cmd" = 'mt' ]; then
		cmdOpts=' ''-s --session -c --container -t --test-case -v --verbose -q --quiet -R --remove-old-test-cases -m --comment --no-default-plugin-dir --show-stack-trace --no-progress-bar --add-plugin-dir -p --pretend --progress-bar -h --help -n --name'' '
		
		# take out options already given
		for opt in $options
		do
			
			if [ "$opt" = '-s' -o "$opt" = '--session' ]; then
				cmdOpts=${cmdOpts/ '-s' / }
				cmdOpts=${cmdOpts/ '--session' / }
			fi
			
			if [ "$opt" = '-c' -o "$opt" = '--container' ]; then
				cmdOpts=${cmdOpts/ '-c' / }
				cmdOpts=${cmdOpts/ '--container' / }
			fi
			
			
			if [ "$opt" = '-v' -o "$opt" = '--verbose' ]; then
				cmdOpts=${cmdOpts/ '-v' / }
				cmdOpts=${cmdOpts/ '--verbose' / }
				cmdOpts=${cmdOpts/ '-q' / }
				cmdOpts=${cmdOpts/ '--quiet' / }
			fi
			
			if [ "$opt" = '-q' -o "$opt" = '--quiet' ]; then
				cmdOpts=${cmdOpts/ '-v' / }
				cmdOpts=${cmdOpts/ '--verbose' / }
				cmdOpts=${cmdOpts/ '-q' / }
				cmdOpts=${cmdOpts/ '--quiet' / }
			fi
			
			if [ "$opt" = '-R' -o "$opt" = '--remove-old-test-cases' ]; then
				cmdOpts=${cmdOpts/ '-R' / }
				cmdOpts=${cmdOpts/ '--remove-old-test-cases' / }
			fi
			
			if [ "$opt" = '-m' -o "$opt" = '--comment' ]; then
				cmdOpts=${cmdOpts/ '-m' / }
				cmdOpts=${cmdOpts/ '--comment' / }
			fi
			
			if [ "$opt" = '--no-default-plugin-dir' ]; then
				cmdOpts=${cmdOpts/ '--no-default-plugin-dir' / }
			fi
			
			if [ "$opt" = '--show-stack-trace' ]; then
				cmdOpts=${cmdOpts/ '--show-stack-trace' / }
			fi
			
			if [ "$opt" = '--no-progress-bar' ]; then
				cmdOpts=${cmdOpts/ '--no-progress-bar' / }
				cmdOpts=${cmdOpts/ '--progress-bar' / }
			fi
			
			
			if [ "$opt" = '-p' -o "$opt" = '--pretend' ]; then
				cmdOpts=${cmdOpts/ '-p' / }
				cmdOpts=${cmdOpts/ '--pretend' / }
			fi
			
			if [ "$opt" = '--progress-bar' ]; then
				cmdOpts=${cmdOpts/ '--no-progress-bar' / }
				cmdOpts=${cmdOpts/ '--progress-bar' / }
			fi
			
			if [ "$opt" = '-h' -o "$opt" = '--help' ]; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
			
			if [ "$opt" = '-n' -o "$opt" = '--name' ]; then
				cmdOpts=${cmdOpts/ '-n' / }
				cmdOpts=${cmdOpts/ '--name' / }
			fi
			
			
			# remove help options within help subcommand
			if [ $isHelpCmd ] ; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
		done
	fi
	
	if [ "$cmd" = 'remove-sessions' -o "$cmd" = 'rs' ]; then
		cmdOpts=' ''--show-stack-trace --add-plugin-dir --no-progress-bar -s --session -c --container -v --verbose --progress-bar -p --pretend -q --quiet --no-default-plugin-dir -h --help'' '
		
		# take out options already given
		for opt in $options
		do
			
			if [ "$opt" = '--show-stack-trace' ]; then
				cmdOpts=${cmdOpts/ '--show-stack-trace' / }
			fi
			
			
			if [ "$opt" = '--no-progress-bar' ]; then
				cmdOpts=${cmdOpts/ '--no-progress-bar' / }
				cmdOpts=${cmdOpts/ '--progress-bar' / }
			fi
			
			
			if [ "$opt" = '-c' -o "$opt" = '--container' ]; then
				cmdOpts=${cmdOpts/ '-c' / }
				cmdOpts=${cmdOpts/ '--container' / }
			fi
			
			if [ "$opt" = '-v' -o "$opt" = '--verbose' ]; then
				cmdOpts=${cmdOpts/ '-v' / }
				cmdOpts=${cmdOpts/ '--verbose' / }
				cmdOpts=${cmdOpts/ '-q' / }
				cmdOpts=${cmdOpts/ '--quiet' / }
			fi
			
			if [ "$opt" = '--progress-bar' ]; then
				cmdOpts=${cmdOpts/ '--no-progress-bar' / }
				cmdOpts=${cmdOpts/ '--progress-bar' / }
			fi
			
			if [ "$opt" = '-p' -o "$opt" = '--pretend' ]; then
				cmdOpts=${cmdOpts/ '-p' / }
				cmdOpts=${cmdOpts/ '--pretend' / }
			fi
			
			if [ "$opt" = '-q' -o "$opt" = '--quiet' ]; then
				cmdOpts=${cmdOpts/ '-v' / }
				cmdOpts=${cmdOpts/ '--verbose' / }
				cmdOpts=${cmdOpts/ '-q' / }
				cmdOpts=${cmdOpts/ '--quiet' / }
			fi
			
			if [ "$opt" = '--no-default-plugin-dir' ]; then
				cmdOpts=${cmdOpts/ '--no-default-plugin-dir' / }
			fi
			
			if [ "$opt" = '-h' -o "$opt" = '--help' ]; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
			
			
			# remove help options within help subcommand
			if [ $isHelpCmd ] ; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
		done
	fi
	
	if [ "$cmd" = 'remove-test-cases' -o "$cmd" = 'rt' ]; then
		cmdOpts=' ''--show-stack-trace -s --session --add-plugin-dir --no-progress-bar -c --container -v --verbose -t --test-case --progress-bar -p --pretend -q --quiet --no-default-plugin-dir -h --help'' '
		
		# take out options already given
		for opt in $options
		do
			
			if [ "$opt" = '--show-stack-trace' ]; then
				cmdOpts=${cmdOpts/ '--show-stack-trace' / }
			fi
			
			if [ "$opt" = '-s' -o "$opt" = '--session' ]; then
				cmdOpts=${cmdOpts/ '-s' / }
				cmdOpts=${cmdOpts/ '--session' / }
			fi
			
			
			if [ "$opt" = '--no-progress-bar' ]; then
				cmdOpts=${cmdOpts/ '--no-progress-bar' / }
				cmdOpts=${cmdOpts/ '--progress-bar' / }
			fi
			
			if [ "$opt" = '-c' -o "$opt" = '--container' ]; then
				cmdOpts=${cmdOpts/ '-c' / }
				cmdOpts=${cmdOpts/ '--container' / }
			fi
			
			if [ "$opt" = '-v' -o "$opt" = '--verbose' ]; then
				cmdOpts=${cmdOpts/ '-v' / }
				cmdOpts=${cmdOpts/ '--verbose' / }
				cmdOpts=${cmdOpts/ '-q' / }
				cmdOpts=${cmdOpts/ '--quiet' / }
			fi
			
			
			if [ "$opt" = '--progress-bar' ]; then
				cmdOpts=${cmdOpts/ '--no-progress-bar' / }
				cmdOpts=${cmdOpts/ '--progress-bar' / }
			fi
			
			if [ "$opt" = '-p' -o "$opt" = '--pretend' ]; then
				cmdOpts=${cmdOpts/ '-p' / }
				cmdOpts=${cmdOpts/ '--pretend' / }
			fi
			
			if [ "$opt" = '-q' -o "$opt" = '--quiet' ]; then
				cmdOpts=${cmdOpts/ '-v' / }
				cmdOpts=${cmdOpts/ '--verbose' / }
				cmdOpts=${cmdOpts/ '-q' / }
				cmdOpts=${cmdOpts/ '--quiet' / }
			fi
			
			if [ "$opt" = '--no-default-plugin-dir' ]; then
				cmdOpts=${cmdOpts/ '--no-default-plugin-dir' / }
			fi
			
			if [ "$opt" = '-h' -o "$opt" = '--help' ]; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
			
			
			# remove help options within help subcommand
			if [ $isHelpCmd ] ; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
		done
	fi
	
	if [ "$cmd" = 'report' -o "$cmd" = 're' ]; then
		cmdOpts=' ''-s --session -c --container -v --verbose -q --quiet --no-default-plugin-dir --show-stack-trace --no-progress-bar --add-plugin-dir -t --template -d --destination -p --pretend --progress-bar -h --help'' '
		
		# take out options already given
		for opt in $options
		do
			
			if [ "$opt" = '-s' -o "$opt" = '--session' ]; then
				cmdOpts=${cmdOpts/ '-s' / }
				cmdOpts=${cmdOpts/ '--session' / }
			fi
			
			if [ "$opt" = '-c' -o "$opt" = '--container' ]; then
				cmdOpts=${cmdOpts/ '-c' / }
				cmdOpts=${cmdOpts/ '--container' / }
			fi
			
			if [ "$opt" = '-v' -o "$opt" = '--verbose' ]; then
				cmdOpts=${cmdOpts/ '-v' / }
				cmdOpts=${cmdOpts/ '--verbose' / }
				cmdOpts=${cmdOpts/ '-q' / }
				cmdOpts=${cmdOpts/ '--quiet' / }
			fi
			
			if [ "$opt" = '-q' -o "$opt" = '--quiet' ]; then
				cmdOpts=${cmdOpts/ '-v' / }
				cmdOpts=${cmdOpts/ '--verbose' / }
				cmdOpts=${cmdOpts/ '-q' / }
				cmdOpts=${cmdOpts/ '--quiet' / }
			fi
			
			if [ "$opt" = '--no-default-plugin-dir' ]; then
				cmdOpts=${cmdOpts/ '--no-default-plugin-dir' / }
			fi
			
			if [ "$opt" = '--show-stack-trace' ]; then
				cmdOpts=${cmdOpts/ '--show-stack-trace' / }
			fi
			
			if [ "$opt" = '--no-progress-bar' ]; then
				cmdOpts=${cmdOpts/ '--no-progress-bar' / }
				cmdOpts=${cmdOpts/ '--progress-bar' / }
			fi
			
			
			if [ "$opt" = '-t' -o "$opt" = '--template' ]; then
				cmdOpts=${cmdOpts/ '-t' / }
				cmdOpts=${cmdOpts/ '--template' / }
			fi
			
			if [ "$opt" = '-d' -o "$opt" = '--destination' ]; then
				cmdOpts=${cmdOpts/ '-d' / }
				cmdOpts=${cmdOpts/ '--destination' / }
			fi
			
			if [ "$opt" = '-p' -o "$opt" = '--pretend' ]; then
				cmdOpts=${cmdOpts/ '-p' / }
				cmdOpts=${cmdOpts/ '--pretend' / }
			fi
			
			if [ "$opt" = '--progress-bar' ]; then
				cmdOpts=${cmdOpts/ '--no-progress-bar' / }
				cmdOpts=${cmdOpts/ '--progress-bar' / }
			fi
			
			if [ "$opt" = '-h' -o "$opt" = '--help' ]; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
			
			
			# remove help options within help subcommand
			if [ $isHelpCmd ] ; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
		done
	fi
	
	if [ "$cmd" = 'touch-container' ]; then
		cmdOpts=' ''--show-stack-trace --add-plugin-dir --no-progress-bar -v --verbose --progress-bar -p --pretend -q --quiet --no-default-plugin-dir -h --help'' '
		
		# take out options already given
		for opt in $options
		do
			
			if [ "$opt" = '--show-stack-trace' ]; then
				cmdOpts=${cmdOpts/ '--show-stack-trace' / }
			fi
			
			
			if [ "$opt" = '--no-progress-bar' ]; then
				cmdOpts=${cmdOpts/ '--no-progress-bar' / }
				cmdOpts=${cmdOpts/ '--progress-bar' / }
			fi
			
			if [ "$opt" = '-v' -o "$opt" = '--verbose' ]; then
				cmdOpts=${cmdOpts/ '-v' / }
				cmdOpts=${cmdOpts/ '--verbose' / }
				cmdOpts=${cmdOpts/ '-q' / }
				cmdOpts=${cmdOpts/ '--quiet' / }
			fi
			
			if [ "$opt" = '--progress-bar' ]; then
				cmdOpts=${cmdOpts/ '--no-progress-bar' / }
				cmdOpts=${cmdOpts/ '--progress-bar' / }
			fi
			
			if [ "$opt" = '-p' -o "$opt" = '--pretend' ]; then
				cmdOpts=${cmdOpts/ '-p' / }
				cmdOpts=${cmdOpts/ '--pretend' / }
			fi
			
			if [ "$opt" = '-q' -o "$opt" = '--quiet' ]; then
				cmdOpts=${cmdOpts/ '-v' / }
				cmdOpts=${cmdOpts/ '--verbose' / }
				cmdOpts=${cmdOpts/ '-q' / }
				cmdOpts=${cmdOpts/ '--quiet' / }
			fi
			
			if [ "$opt" = '--no-default-plugin-dir' ]; then
				cmdOpts=${cmdOpts/ '--no-default-plugin-dir' / }
			fi
			
			if [ "$opt" = '-h' -o "$opt" = '--help' ]; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
			
			
			# remove help options within help subcommand
			if [ $isHelpCmd ] ; then
				cmdOpts=${cmdOpts/ '-h' / }
				cmdOpts=${cmdOpts/ '--help' / }
			fi
		done
	fi
	
	
	
	# provide help about available options
	COMPREPLY=( $( compgen -W "$cmdOpts" -- $cur ) )
	return 0
}

complete -F _codecover_completion -o default codecover
complete -F _codecover_completion -o default codecover.sh
